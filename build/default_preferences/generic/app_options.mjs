/**
 * @licstart The following is the entire license notice for the
 * JavaScript code in this page
 *
 * Copyright 2023 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @licend The above is the entire license notice for the
 * JavaScript code in this page
 */var e={d:(E,n)=>{for(var a in n)e.o(n,a)&&!e.o(E,a)&&Object.defineProperty(E,a,{enumerable:!0,get:n[a]})},o:(e,E)=>Object.prototype.hasOwnProperty.call(e,E)},__webpack_exports__={};e.d(__webpack_exports__,{AppOptions:()=>AppOptions,OptionKind:()=>n});{var E=Object.create(null);"undefined"==typeof navigator&&(globalThis.navigator=Object.create(null));const e=navigator.userAgent||"",n=navigator.platform||"",a=navigator.maxTouchPoints||1,i=/Android/.test(e),o=/\b(iPad|iPhone|iPod)(?=;)/.test(e)||"MacIntel"===n&&a>1;!function checkCanvasSizeLimitation(){(o||i)&&(E.maxCanvasPixels=5242880)}()}const n={BROWSER:1,VIEWER:2,API:4,WORKER:8,PREFERENCE:128},a={canvasMaxAreaInBytes:{value:-1,kind:n.BROWSER+n.API},isInAutomation:{value:!1,kind:n.BROWSER},supportsCaretBrowsingMode:{value:!1,kind:n.BROWSER},supportsDocumentFonts:{value:!0,kind:n.BROWSER},supportsIntegratedFind:{value:!1,kind:n.BROWSER},supportsMouseWheelZoomCtrlKey:{value:!0,kind:n.BROWSER},supportsMouseWheelZoomMetaKey:{value:!0,kind:n.BROWSER},supportsPinchToZoom:{value:!0,kind:n.BROWSER},annotationEditorMode:{value:0,kind:n.VIEWER+n.PREFERENCE},annotationMode:{value:2,kind:n.VIEWER+n.PREFERENCE},cursorToolOnLoad:{value:0,kind:n.VIEWER+n.PREFERENCE},debuggerSrc:{value:"./debugger.mjs",kind:n.VIEWER},defaultZoomDelay:{value:400,kind:n.VIEWER+n.PREFERENCE},defaultZoomValue:{value:"",kind:n.VIEWER+n.PREFERENCE},disableHistory:{value:!1,kind:n.VIEWER},disablePageLabels:{value:!1,kind:n.VIEWER+n.PREFERENCE},enableHighlightEditor:{value:!1,kind:n.VIEWER+n.PREFERENCE},enableHighlightFloatingButton:{value:!1,kind:n.VIEWER+n.PREFERENCE},enableML:{value:!1,kind:n.VIEWER+n.PREFERENCE},enablePermissions:{value:!1,kind:n.VIEWER+n.PREFERENCE},enablePrintAutoRotate:{value:!0,kind:n.VIEWER+n.PREFERENCE},enableScripting:{value:!0,kind:n.VIEWER+n.PREFERENCE},enableStampEditor:{value:!0,kind:n.VIEWER+n.PREFERENCE},externalLinkRel:{value:"noopener noreferrer nofollow",kind:n.VIEWER},externalLinkTarget:{value:0,kind:n.VIEWER+n.PREFERENCE},highlightEditorColors:{value:"yellow=#FFFF98,green=#53FFBC,blue=#80EBFF,pink=#FFCBE6,red=#FF4F5F",kind:n.VIEWER+n.PREFERENCE},historyUpdateUrl:{value:!1,kind:n.VIEWER+n.PREFERENCE},ignoreDestinationZoom:{value:!1,kind:n.VIEWER+n.PREFERENCE},imageResourcesPath:{value:"./images/",kind:n.VIEWER},maxCanvasPixels:{value:2**25,kind:n.VIEWER},forcePageColors:{value:!1,kind:n.VIEWER+n.PREFERENCE},pageColorsBackground:{value:"Canvas",kind:n.VIEWER+n.PREFERENCE},pageColorsForeground:{value:"CanvasText",kind:n.VIEWER+n.PREFERENCE},pdfBugEnabled:{value:!1,kind:n.VIEWER+n.PREFERENCE},printResolution:{value:150,kind:n.VIEWER},sidebarViewOnLoad:{value:-1,kind:n.VIEWER+n.PREFERENCE},scrollModeOnLoad:{value:-1,kind:n.VIEWER+n.PREFERENCE},spreadModeOnLoad:{value:-1,kind:n.VIEWER+n.PREFERENCE},textLayerMode:{value:1,kind:n.VIEWER+n.PREFERENCE},viewOnLoad:{value:0,kind:n.VIEWER+n.PREFERENCE},cMapPacked:{value:!0,kind:n.API},cMapUrl:{value:"../web/cmaps/",kind:n.API},disableAutoFetch:{value:!1,kind:n.API+n.PREFERENCE},disableFontFace:{value:!1,kind:n.API+n.PREFERENCE},disableRange:{value:!1,kind:n.API+n.PREFERENCE},disableStream:{value:!1,kind:n.API+n.PREFERENCE},docBaseUrl:{value:"",kind:n.API},enableHWA:{value:!0,kind:n.API+n.VIEWER+n.PREFERENCE},enableXfa:{value:!0,kind:n.API+n.PREFERENCE},fontExtraProperties:{value:!1,kind:n.API},isEvalSupported:{value:!0,kind:n.API},isOffscreenCanvasSupported:{value:!0,kind:n.API},maxImageSize:{value:-1,kind:n.API},pdfBug:{value:!1,kind:n.API},standardFontDataUrl:{value:"../web/standard_fonts/",kind:n.API},verbosity:{value:1,kind:n.API},workerPort:{value:null,kind:n.WORKER},workerSrc:{value:"../build/pdf.worker.min.mjs",kind:n.WORKER}};a.defaultUrl={value:"compressed.tracemonkey-pldi-09.pdf",kind:n.VIEWER};a.sandboxBundleSrc={value:"../build/pdf.sandbox.mjs",kind:n.VIEWER};a.viewerCssTheme={value:0,kind:n.VIEWER+n.PREFERENCE};a.disablePreferences={value:!1,kind:n.VIEWER};a.locale={value:navigator.language||"en-US",kind:n.VIEWER};const i=Object.create(null);for(const e in E)i[e]=E[e];for(const e in a){const{value:i,kind:o}=a[e];if(o&n.PREFERENCE){if(o===n.PREFERENCE)throw new Error(`Cannot use only "PREFERENCE" kind: ${e}`);if(o&n.BROWSER)throw new Error(`Cannot mix "PREFERENCE" and "BROWSER" kind: ${e}`);if("object"==typeof E&&void 0!==E[e])throw new Error(`Should not have compatibility-value for "PREFERENCE" kind: ${e}`);if("boolean"!=typeof i&&"string"!=typeof i&&!Number.isInteger(i))throw new Error(`Invalid value for "PREFERENCE" kind: ${e}`)}}class AppOptions{constructor(){throw new Error("Cannot initialize AppOptions.")}static get(e){return i[e]??a[e]?.value??void 0}static getAll(e=null,E=!1){const n=Object.create(null);for(const o in a){const t=a[o];(!e||e&t.kind)&&(n[o]=E?t.value:i[o]??t.value)}return n}static set(e,E){i[e]=E}static setAll(e,n=!1){if(n){if(this.get("disablePreferences"))return;for(const e in i)if(void 0===E[e]){console.warn('setAll: The Preferences may override manually set AppOptions; please use the "disablePreferences"-option in order to prevent that.');break}}for(const E in e)i[E]=e[E]}static remove(e){delete i[e];const n=E[e];void 0!==n&&(i[e]=n)}}var o=__webpack_exports__.AppOptions,t=__webpack_exports__.OptionKind;export{o as AppOptions,t as OptionKind};